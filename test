local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/EpicDeevv/Muscle-Legends-V2/refs/heads/main/UI"))()
local Window = Library:AddWindow("Muscle Legends V2", { MinSize = Vector2.new(622, 650) })

-- Default values for sliders
local defaultWalkSpeed = 16
local defaultJumpPower = 50
local defaultHipHeight = 2

-- Main Tab
local MainTab = Window:AddTab("Main")
MainTab:AddSlider("WalkSpeed", function(Value)
    local player = game.Players.LocalPlayer
    if player and player.Character then
        player.Character.Humanoid.WalkSpeed = Value
    end
end, { Min = 16, Max = 2000, Default = defaultWalkSpeed })

MainTab:AddSlider("JumpPower", function(Value)
    local player = game.Players.LocalPlayer
    if player and player.Character then
        player.Character.Humanoid.JumpPower = Value
    end
end, { Min = 50, Max = 500, Default = defaultJumpPower })

MainTab:AddSlider("HipHeight", function(Value)
    local player = game.Players.LocalPlayer
    if player and player.Character then
        player.Character.Humanoid.HipHeight = Value
    end
end, { Min = 0, Max = 1000, Default = defaultHipHeight })

-- Add invisible baseplate
local function addInvisibleBaseplate()
    local baseplate = Instance.new("Part")
    baseplate.Size = Vector3.new(math.huge, 1, math.huge)
    baseplate.Anchored = true
    baseplate.CanCollide = true
    baseplate.Transparency = 1
    baseplate.Position = Vector3.new(0, -10, 0)
    baseplate.Parent = game.Workspace
end

addInvisibleBaseplate()

-- Kill Tab
local KillTab = Window:AddTab("Killing")

KillTab:AddButton("Speed Punch", function()
    local player = game.Players.LocalPlayer
    local punch = player.Backpack:FindFirstChild("Punch") or player.Character:FindFirstChild("Punch")
    if punch and punch:FindFirstChild("attackTime") then
        punch.attackTime.Value = 0
    end
end)

local AutoPunchToggle = false

KillTab:AddSwitch("Auto Punch", function(State)
    AutoPunchToggle = State
    if AutoPunchToggle then
        local function autoPunchLoop()
            while AutoPunchToggle do
                local player = game.Players.LocalPlayer
                local tool = player.Backpack:FindFirstChild("Punch") or player.Character:FindFirstChild("Punch")
                if tool and tool.Parent ~= player.Character then
                    tool.Parent = player.Character
                end
                if tool then
                    tool:Activate()
                end
                wait(0.01)
            end
        end
        coroutine.wrap(autoPunchLoop)()
    end
end)

-- Auto Kill Toggle
local AutoKillToggle = false
local lastTeleportTime = tick()

-- Teleport heads to right hand
local function teleportHeadsToRightHand()
    local player = game.Players.LocalPlayer
    local character = player.Character or game.Workspace:FindFirstChild(player.Name)
    if not character then return end

    local rightHand = character:FindFirstChild("RightHand")
    if not rightHand then return end

    -- Loop through all players and teleport their heads
    for _, otherPlayer in pairs(game.Players:GetChildren()) do
        if otherPlayer.Name ~= player.Name then
            local otherCharacter = game.Workspace:FindFirstChild(otherPlayer.Name)
            if otherCharacter then
                local head = otherCharacter:FindFirstChild("Head")
                if head then
                    head.CFrame = rightHand.CFrame
                end
            end
        end
    end
end

KillTab:AddSwitch("Auto Kill", function(State)
    AutoKillToggle = State
    if AutoKillToggle then
        -- Infinite loop to teleport all player's heads to the right hand
        local function autoKillLoop()
            while AutoKillToggle do
                local currentTime = tick()
                -- To avoid unnecessary performance overhead, ensure it's not teleporting too frequently
                if currentTime - lastTeleportTime > 0.1 then
                    teleportHeadsToRightHand()
                    lastTeleportTime = currentTime
                end
                wait(0.1)  -- Teleport every 0.1 seconds
            end
        end
        coroutine.wrap(autoKillLoop)()  -- Run the loop in a coroutine to keep it non-blocking
    end
end)

-- Rebirth tab
local RebirthTab = Window:AddTab("Rebirth")
RebirthTab:AddLabel("Coming soon!")

-- Misc Tab
local MiscTab = Window:AddTab("Misc")

-- AutoFarm Tab
local AutoFarmTab = Window:AddTab("Auto Farm")

local AutoWeightToggle = false
local AutoPushupsToggle = false
local SitupsToggle = false
local MuscleKingFarmToggle = false

-- Auto Punch
local function AutoPunch()
    spawn(function()
        while AutoPunchToggle do
            local player = game.Players.LocalPlayer
            local punchTool = player.Backpack:FindFirstChild("Punch") or player.Character:FindFirstChild("Punch")
            
            if punchTool then
                player.Character.Humanoid:EquipTool(punchTool)
                punchTool:Activate()
            end
            wait(0.1)
        end
    end)
end

-- Auto Weight
local function AutoWeight()
    spawn(function()
        while AutoWeightToggle do
            local player = game.Players.LocalPlayer
            local weightTool = player.Backpack:FindFirstChild("Weight") or player.Character:FindFirstChild("Weight")
            
            if weightTool then
                player.Character.Humanoid:EquipTool(weightTool)
                weightTool:Activate()
            end
            wait(0.1)
        end
    end)
end

-- Auto Pushups
local function AutoPushups()
    spawn(function()
        while AutoPushupsToggle do
            local player = game.Players.LocalPlayer
            local pushupsTool = player.Backpack:FindFirstChild("Pushups") or player.Character:FindFirstChild("Pushups")
            
            if pushupsTool then
                player.Character.Humanoid:EquipTool(pushupsTool)
                pushupsTool:Activate()
            end
            wait(0.1)
        end
    end)
end

-- Auto Situps
local function AutoSitups()
    spawn(function()
        while SitupsToggle do
            local player = game.Players.LocalPlayer
            local situpsTool = player.Backpack:FindFirstChild("Situps") or player.Character:FindFirstChild("Situps")
            
            if situpsTool then
                player.Character.Humanoid:EquipTool(situpsTool)
                situpsTool:Activate()
            end
            wait(0.1)
        end
    end)
end

-- Muscle King Farm
local function MuscleKingFarm()
    spawn(function()
        while MuscleKingFarmToggle do
            local player = game.Players.LocalPlayer
            player.Character.HumanoidRootPart.CFrame = CFrame.new(-8546.25879, 23.045435, -5636.78418)
            local pushupsTool = player.Backpack:FindFirstChild("Pushups") or player.Character:FindFirstChild("Pushups")
            if pushupsTool then
                player.Character.Humanoid:EquipTool(pushupsTool)
                pushupsTool:Activate()
            end
            wait(0.1)
        end
    end)
end

AutoFarmTab:AddSwitch("Auto Weight", function(value)
    AutoWeightToggle = value
    if AutoWeightToggle then
        AutoWeight()
    end
end)

AutoFarmTab:AddSwitch("Auto Pushups", function(value)
    AutoPushupsToggle = value
    if AutoPushupsToggle then
        AutoPushups()
    end
end)

AutoFarmTab:AddSwitch("Situps", function(value)
    SitupsToggle = value
    if SitupsToggle then
        AutoSitups()
    end
end)

AutoFarmTab:AddSwitch("Muscle King Farm", function(value)
    MuscleKingFarmToggle = value
    if MuscleKingFarmToggle then
        MuscleKingFarm()
    end
end)

-- Rock Tab
local RockTab = Window:AddTab("Rock")

-- Tiny Rock Teleport
RockTab:AddButton("Tiny Rock", function()
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(17.6410236, -1.30998898, 2106.48926)
end)

-- Frozen Rock Teleport
RockTab:AddButton("Frozen Rock", function()
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-2551.75854, -0.359962642, -243.308777)
end)

-- Mystic Rock Teleport
RockTab:AddButton("Mystic Rock", function()
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(2186.14111, -0.359961987, 1250.59802)
end)

-- Inferno Rock Teleport
RockTab:AddButton("Inferno Rock", function()
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-7262.18701, -0.359961987, -1259.24426)
end)

-- Legend Rock Teleport
RockTab:AddButton("Legend Rock", function()
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(4140.41797, 987.453186, -4089.34937)
end)

-- MuscleKing Rock Teleport
RockTab:AddButton("Muscle King Rock", function()
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-8971.56641, 27.4031715, -6061.27734)
end)

-- Teleport Tab
local TeleportTab = Window:AddTab("Teleport")

-- Beach Teleport
TeleportTab:AddButton("Beach", function()
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-11, 5, -178)
end)

-- Legends Teleport
TeleportTab:AddButton("Legends", function()
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(4603, 989, -3898)
end)

-- Muscle Teleport
TeleportTab:AddButton("Muscle", function()
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-8626, 15, -5730)
end)

-- Tiny Teleport
TeleportTab:AddButton("Tiny", function()
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-38, 5, 1884)
end)

-- Secret Teleport
TeleportTab:AddButton("Secret", function()
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-2596, -1, 5738)
end)

-- Inferno Teleport
TeleportTab:AddButton("Inferno", function()
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-6759, 5, -1285)
end)

-- Frost Teleport
TeleportTab:AddButton("Frost", function()
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-2623, 5, -409)
end)

-- Mythical Teleport
TeleportTab:AddButton("Mythical", function()
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(2251, 5, 1073)
end)

-- View Stats tab
local ViewStatsTab = Window:AddTab("ViewStats")

-- Create dropdown for player selection
local dropdown = features:AddDropdown("select", function(playerName)
    -- Find the player object based on the selected username
    local player = game.Players:FindFirstChild(playerName)
    
    if player then
        -- Get the player's character and their stats
        local character = player.Character
        if character then
            -- Fetch the player's IntValues for Strength, Durability, and Agility
            local strength = character:FindFirstChild("Strength")
            local durability = character:FindFirstChild("Durability")
            local agility = character:FindFirstChild("Agility")
            
            -- If the values exist, update the labels with the stats
            if strength then
                ViewStatsTab:FindFirstChild("StrengthLabel").Text = "Strength: " .. strength.Value
            else
                ViewStatsTab:FindFirstChild("StrengthLabel").Text = "Strength: N/A"
            end
            if durability then
                ViewStatsTab:FindFirstChild("DurabilityLabel").Text = "Durability: " .. durability.Value
            else
                ViewStatsTab:FindFirstChild("DurabilityLabel").Text = "Durability: N/A"
            end
            if agility then
                ViewStatsTab:FindFirstChild("AgilityLabel").Text = "Agility: " .. agility.Value
            else
                ViewStatsTab:FindFirstChild("AgilityLabel").Text = "Agility: N/A"
            end
        end
    end
end)

-- Populate the dropdown with all players in the server
for _, player in ipairs(game.Players:GetPlayers()) do
    dropdown:Add(player.Name)
end

-- Add labels to the ViewStatsTab and name them for reference
local strengthLabel = ViewStatsTab:AddLabel("Strength: N/A")
strengthLabel.Name = "StrengthLabel"

local durabilityLabel = ViewStatsTab:AddLabel("Durability: N/A")
durabilityLabel.Name = "DurabilityLabel"

local agilityLabel = ViewStatsTab:AddLabel("Agility: N/A")
agilityLabel.Name = "AgilityLabel"

-- Update the dropdown when new players join the game
game.Players.PlayerAdded:Connect(function(player)
    dropdown:Add(player.Name)
end)

-- Remove players from dropdown when they leave the game
game.Players.PlayerRemoving:Connect(function(player)
    dropdown:Remove(player.Name)
end)

local Tab = Window:AddTab("Credit")

Tab:AddLabel("This Script Was Made By K_R")

Tab:AddLabel("Private Version")
